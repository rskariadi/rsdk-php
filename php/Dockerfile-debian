# PHP Docker image for RSUP Dr. Kariadi runtime
# ==============================================

ARG PHP_BASE_IMAGE_VERSION
FROM php:${PHP_BASE_IMAGE_VERSION} as min

# Install required system packages for PHP extensions for RSUP Dr. Kariadi Image
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/
RUN install-php-extensions \
        intl

# Environment settings
ENV PHP_USER_ID=33 \
    PATH=/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH \
    TERM=linux

# Add configuration files
COPY image-files/min/ /

# Enable mod_rewrite for images with apache
RUN if command -v a2enmod >/dev/null 2>&1; then \
        a2enmod rewrite headers \
    ;fi

# Application environment
WORKDIR /app

RUN chmod 777 \
        /usr/local/bin/docker-php-entrypoint


FROM min as dev
ARG PECL_MONGODB_INSTALL_SUFFIXW
ARG PECL_XDEBUG_INSTALL_SUFFIX

# Install system packages
RUN apt-get update && \
    apt-get -y install \
            git \
            unzip \
        --no-install-recommends && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# disable git's automatic conversion
RUN git config --global core.autocrlf input

# Install common system packages for PHP extensions recommended for RSUP Dr. Kariadi Image
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/
RUN install-php-extensions \
        pcntl \
        soap \
        zip \
        bcmath \
        exif \
        gd \
        opcache \
        mysqli \
        sqlsrv \
        pdo_sqlsrv \
        pdo_mysql \
        pdo_pgsql \
        imagick \
        mongodb${PECL_MONGODB_INSTALL_SUFFIX} \
        xdebug${PECL_XDEBUG_INSTALL_SUFFIX}

# Add configuration files
COPY image-files/dev/ /

# Disable xdebug by default (see PHP_ENABLE_XDEBUG)
RUN rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Add GITHUB_API_TOKEN support for composer
RUN chmod 755 \
        /usr/local/bin/docker-php-entrypoint \
        /usr/local/bin/composer

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- \
        --filename=composer.phar \
        --install-dir=/usr/local/bin && \
    composer clear-cache

# Environment settings
ENV COMPOSER_ALLOW_SUPERUSER=1 \
    PHP_ENABLE_XDEBUG=0


FROM min as nginx-min

# Install nginx
RUN apt-get update \
 && apt-get install -y --force-yes \
            nginx-full \
            cron \
            supervisor \
            procps \
        --no-install-recommends && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV SUPERVISOR_START_FPM=true \
    SUPERVISOR_START_NGINX=true

# Add configuration files
COPY image-files/nginx/ /

# forward request and error logs to docker log collector
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
 && ln -sf /dev/stderr /var/log/nginx/error.log \
 && ln -sf /usr/sbin/cron /usr/sbin/crond

CMD ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]

EXPOSE 80 443


FROM dev as nginx-dev

# Install nginx
RUN apt-get update \
 && apt-get install -y --force-yes \
            nginx-full \
            cron \
            supervisor \
            procps \
        --no-install-recommends && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV SUPERVISOR_START_FPM=true \
    SUPERVISOR_START_NGINX=true

# Add configuration files
COPY image-files/nginx/ /

# forward request and error logs to docker log collector
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
 && ln -sf /dev/stderr /var/log/nginx/error.log \
 && ln -sf /usr/sbin/cron /usr/sbin/crond

CMD ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]

EXPOSE 80 443
